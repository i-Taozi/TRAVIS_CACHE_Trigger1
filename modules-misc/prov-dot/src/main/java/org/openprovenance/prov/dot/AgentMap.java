//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.08.05 at 10:17:37 PM BST 
//


package org.openprovenance.prov.dot;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import org.openprovenance.apache.commons.lang.builder.Equals;
import org.openprovenance.apache.commons.lang.builder.ToString;
import org.openprovenance.apache.commons.lang.builder.HashCode;
import org.openprovenance.apache.commons.lang.builder.EqualsBuilder;
import org.openprovenance.apache.commons.lang.builder.HashCodeBuilder;
import org.openprovenance.apache.commons.lang.builder.ToStringBuilder;


/**
 * <p>Java class for AgentMap complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AgentMap"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="agent" type="{http://openprovenance.org/model/opmPrinterConfig}AgentMapEntry" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="displayValue" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 *       &lt;attribute name="coloredAsAccount" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AgentMap", namespace = "http://openprovenance.org/model/opmPrinterConfig", propOrder = {
    "agent"
})
public class AgentMap
    implements Equals, HashCode, ToString
{

    @XmlElement(namespace = "http://openprovenance.org/model/opmPrinterConfig")
    protected List<AgentMapEntry> agent;
    @XmlAttribute(name = "displayValue")
    protected Boolean displayValue;
    @XmlAttribute(name = "coloredAsAccount")
    protected Boolean coloredAsAccount;

    /**
     * Gets the value of the agent property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the agent property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAgent().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AgentMapEntry }
     * 
     * 
     */
    public List<AgentMapEntry> getAgent() {
        if (agent == null) {
            agent = new ArrayList<AgentMapEntry>();
        }
        return this.agent;
    }

    /**
     * Gets the value of the displayValue property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isDisplayValue() {
        return displayValue;
    }

    /**
     * Sets the value of the displayValue property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDisplayValue(Boolean value) {
        this.displayValue = value;
    }

    /**
     * Gets the value of the coloredAsAccount property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isColoredAsAccount() {
        return coloredAsAccount;
    }

    /**
     * Sets the value of the coloredAsAccount property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setColoredAsAccount(Boolean value) {
        this.coloredAsAccount = value;
    }

    public void equals(Object object, EqualsBuilder equalsBuilder) {
        if (!(object instanceof AgentMap)) {
            equalsBuilder.appendSuper(false);
            return ;
        }
        if (this == object) {
            return ;
        }
        final AgentMap that = ((AgentMap) object);
        equalsBuilder.append(this.getAgent(), that.getAgent());
        equalsBuilder.append(this.isDisplayValue(), that.isDisplayValue());
        equalsBuilder.append(this.isColoredAsAccount(), that.isColoredAsAccount());
    }

    public boolean equals(Object object) {
        if (!(object instanceof AgentMap)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final EqualsBuilder equalsBuilder = new EqualsBuilder();
        equals(object, equalsBuilder);
        return equalsBuilder.isEquals();
    }

    public void hashCode(HashCodeBuilder hashCodeBuilder) {
        hashCodeBuilder.append(this.getAgent());
        hashCodeBuilder.append(this.isDisplayValue());
        hashCodeBuilder.append(this.isColoredAsAccount());
    }

    public int hashCode() {
        final HashCodeBuilder hashCodeBuilder = new HashCodeBuilder();
        hashCode(hashCodeBuilder);
        return hashCodeBuilder.toHashCode();
    }

    public void toString(ToStringBuilder toStringBuilder) {
        {
            List<AgentMapEntry> theAgent;
            theAgent = this.getAgent();
            toStringBuilder.append("agent", theAgent);
        }
        {
            Boolean theDisplayValue;
            theDisplayValue = this.isDisplayValue();
            toStringBuilder.append("displayValue", theDisplayValue);
        }
        {
            Boolean theColoredAsAccount;
            theColoredAsAccount = this.isColoredAsAccount();
            toStringBuilder.append("coloredAsAccount", theColoredAsAccount);
        }
    }

    public String toString() {
        final ToStringBuilder toStringBuilder = new ToStringBuilder(this);
        toString(toStringBuilder);
        return toStringBuilder.toString();
    }

}
