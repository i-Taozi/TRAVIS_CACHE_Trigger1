<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.godcheese.nimrod.quartz.mapper.JobMapper">
    <resultMap id="BaseResultMap" type="com.godcheese.nimrod.quartz.entity.JobEntity">
        <result column="sched_name" property="schedName" jdbcType="VARCHAR"/> <!-- api 名称 -->
        <result column="job_name" property="jobName" jdbcType="VARCHAR"/> <!--请求地址（url）-->
        <result column="job_group" property="jobGroup" jdbcType="VARCHAR"/> <!-- 权限（authority） -->
        <result column="description" property="description" jdbcType="VARCHAR"/> <!-- api 分类 id -->
        <result column="job_class_name" property="jobClassName" jdbcType="VARCHAR"/> <!-- 排序 -->
        <result column="is_durable" property="isDurable" jdbcType="VARCHAR"/> <!-- 备注 -->
        <result column="is_nonconcurrent" property="isNonconcurrent" jdbcType="VARCHAR"/> <!-- 更新时间 -->
        <result column="is_update_date" property="isUpdateDate" jdbcType="VARCHAR"/> <!-- 创建时间 -->
        <result column="requests_recovery" property="requestsRecovery" jdbcType="VARCHAR"/> <!-- 创建时间 -->
        <result column="trigger_name" property="triggerName" jdbcType="VARCHAR"/> <!-- 创建时间 -->
        <result column="trigger_group" property="triggerGroup" jdbcType="VARCHAR"/> <!-- 创建时间 -->
        <result column="nextFire_time" property="nextFireTime" jdbcType="BIGINT"/> <!-- 创建时间 -->
        <result column="prevFire_time" property="prevFireTime" jdbcType="BIGINT"/> <!-- 创建时间 -->
        <result column="priority" property="priority" jdbcType="INTEGER"/> <!-- 创建时间 -->
        <result column="trigger_state" property="triggerState" jdbcType="VARCHAR"/> <!-- 创建时间 -->
        <result column="trigger_type" property="triggerType" jdbcType="VARCHAR"/> <!-- 创建时间 -->
        <result column="start_time" property="startTime" jdbcType="BIGINT"/> <!-- 创建时间 -->
        <result column="end_time" property="endTime" jdbcType="BIGINT"/> <!-- 创建时间 -->
        <result column="calendar_name" property="calendarName" jdbcType="VARCHAR"/> <!-- 创建时间 -->
        <result column="misfire_instr" property="misfireInstr" jdbcType="INTEGER"/> <!-- 创建时间 -->
        <result column="cron_expression" property="cronExpression" jdbcType="VARCHAR"/> <!-- 创建时间 -->
        <result column="time_zone_id" property="timeZoneId" jdbcType="VARCHAR"/> <!-- 创建时间 -->
    </resultMap>

    <sql id="TableName">

    </sql>

    <sql id="BaseColumnList">

    </sql>

    <select id="pageAll" resultMap="BaseResultMap" parameterType="com.github.pagehelper.Page">
        select `qjd`.*,
               `qt`.*,
               `qct`.*
        from `QRTZ_JOB_DETAILS` `qjd`
                 left join `QRTZ_TRIGGERS` `qt` on (`qjd`.`job_name` = `qt`.`job_name`)
                 left join `QRTZ_CRON_TRIGGERS` `qct` on (`qt`.`trigger_name` = `qct`.`trigger_name`)
    </select>

    <select id="getOneByJobClassNameAndJobGroup" resultMap="BaseResultMap">
        select `qjd`.*,
               `qt`.*,
               `qct`.*
        from `QRTZ_JOB_DETAILS` `qjd`
                 left join `QRTZ_TRIGGERS` `qt` on (`qjd`.`job_name` = `qt`.`job_name`)
                 left join `QRTZ_CRON_TRIGGERS` `qct` on (`qt`.`trigger_name` = `qct`.`trigger_name`)
        where `qjd`.`job_class_name` = #{jobClassName}
          and `qjd`.`job_group` = #{jobGroup}
        limit 1
    </select>

    <update id="updateJobDetailsDescriptionByJobClassNameAndJobGroup">
        update
            `QRTZ_JOB_DETAILS`
        set `description` = #{description}
        where `job_class_name` = #{jobClassName}
          and `job_group` = #{jobGroup}
    </update>
</mapper>
