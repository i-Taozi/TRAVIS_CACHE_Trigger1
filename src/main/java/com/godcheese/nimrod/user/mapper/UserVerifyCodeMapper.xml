<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.godcheese.nimrod.user.mapper.UserVerifyCodeMapper">
    <resultMap id="BaseResultMap" type="com.godcheese.nimrod.user.entity.UserVerifyCodeEntity">
        <id column="id" property="id" jdbcType="BIGINT"/> <!-- id -->
        <result column="user_id" property="userId" jdbcType="BIGINT"/> <!-- 用户 id -->
        <result column="verify_from" property="verifyFrom" jdbcType="VARCHAR"/> <!-- 用户绑定的电子邮箱或手机号码 -->
        <result column="verify_code" property="verifyCode" jdbcType="VARCHAR"/> <!-- 电子邮箱或手机号码验证码 -->
        <result column="gmt_expires" property="gmtExpires" jdbcType="TIMESTAMP"/> <!-- 过期时间 -->
        <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP"/> <!-- 创建时间 -->
    </resultMap>

    <sql id="TableName">
        `user_verify_code`
    </sql>

    <sql id="BaseColumnList">
        `id`, `user_id`, `verify_from`, `verify_code`, `gmt_expires`, `gmt_created`
    </sql>

    <insert id="insertOne" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.godcheese.nimrod.user.entity.UserVerifyCodeEntity">
        insert into
        <include refid="TableName"/>
        (`id`, `user_id`, `verify_from`, `verify_code`, `gmt_expires`, `gmt_created`)
        values (#{id}, #{userId}, #{verifyFrom}, #{verifyCode}, #{gmtExpires}, #{gmtCreated})
    </insert>

    <update id="updateOne" keyProperty="id" parameterType="com.godcheese.nimrod.user.entity.UserVerifyCodeEntity">
        update
        <include refid="TableName"/>
        set `user_id` = #{userId}, `verify_from` = #{verifyFrom}, `verify_code` = #{verifyCode}, `gmt_expires` =
        #{gmtExpires}, `gmt_created` = #{gmtCreated}
        where `id`= #{id}
    </update>

    <update id="updateOneByUserIdAndVerifyFrom" keyProperty="id"
            parameterType="com.godcheese.nimrod.user.entity.UserVerifyCodeEntity">
        update
        <include refid="TableName"/>
        set `verify_code` = #{verifyCode}, `gmt_expires` =
        #{gmtExpires}, `gmt_created` = #{gmtCreated}
        where `user_id`= #{userId} and `verify_from` = #{verifyFrom}
    </update>

    <delete id="deleteOne" parameterType="long">
        delete from
        <include refid="TableName"/>
        where `id` = #{id}
    </delete>

    <delete id="deleteAllByEmail">
        delete from
        <include refid="TableName"/>
        where `email` = #{email}
    </delete>

    <select id="getOne" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from
        <include refid="TableName"/>
        where `id` = #{id} limit 1
    </select>

    <select id="getOneByUserIdAndVerifyFrom" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from
        <include refid="TableName"/>
        where `user_id` = #{userId} and `verify_from` = #{verifyFrom} limit 1
    </select>

    <select id="listAll" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from
        <include refid="TableName"/>
    </select>
</mapper>
